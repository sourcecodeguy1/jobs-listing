name: Build & Deploy Jobs Listing

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.version.outputs.app_version }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.14.0
        uses: actions/setup-node@v1
        with:
          node-version: '16.14'

      # Uncomment when tests are ready
      # - name: Install npm and run unittest
      #   run: |
      #     npm install
      #     npm test
      #   env:
      #     CI: true

      - name: Set APP_VERSION (CalVer-SHA, Docker-safe)
        id: version
        run: echo "app_version=$(date +'%Y.%m.%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Jobs Listing
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ steps.version.outputs.app_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vultr Server
        uses: appleboy/ssh-action@v1.6.1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            cd ${{ secrets.DIRECTORY }}
            export JOBS_TAG='${{ needs.build.outputs.app_version }}'

            echo "Pulling versioned image for Jobs Listing..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${JOBS_TAG}

            echo "Restarting Jobs Listing service only..."
            docker-compose up -d jobs

            echo "Deployment completed! âœ…"
